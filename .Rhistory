library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
library(zoo)
library(VGAM)
library(MASS)
library(car)
library(forecast)
library(conflicted)
library(tidyr)
library(scales)
library(reshape2)
library(psych)
library(vars)
library(lmtest)
conflict_prefer('select', 'dplyr')
conflict_prefer('filter', 'dplyr')
conflict_prefer('lag', 'dplyr')
conflict_prefer('melt', 'reshape2')
change_func <- function(col1, col2){
change <- ((col1 - col2)/col2)*100
return(change)
}
my_theme = theme(panel.grid = element_line(color = '#e6e6e6'),
panel.background = element_rect(fill = 'white'),
plot.title = element_text(hjust = .5, size = 12, colour = 'black'),
text = element_text(family = 'Georgia'),
axis.text = element_text(size = 10),
axis.title = element_text(size = 18, family = 'Georgia', face = 'bold'),
axis.line = element_line(colour = '#737373', size = 1),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#to resolve the local time issue:
Sys.setlocale("LC_TIME", "C")
#Anil
#df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
##Mert
#df <- read.csv(file= "/Users/mertbasaran/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv")
#df_drivers <- read.csv(file = "/Users/mertbasaran/Documents/GitHub/csbtc/current.csv")
#Elcin
df <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df_drivers <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
#Alkim
#df <- read.csv(file= 'C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv('C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/current.csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(mondate::year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(price = mean(Price))
df_price_quarterly$lag <- lag(df_price_quarterly$price)
df_price_quarterly$change <- change_func(df_price_quarterly$price, df_price_quarterly$lag)
df_price_quarterly = df_price_quarterly[-c(52),] #last quarter not finished
df_price_quarterly$lag <- na.fill(df_price_quarterly$lag, 0)
df_price_quarterly$change <- na.fill(df_price_quarterly$change, 0)
df_price_quarterly <- df_price_quarterly[-nrow(df_price_quarterly),]
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
colnames(df_drivers) <- c('Date', 'Unemp_Rate', 'CPIAUCSL', 'CPILFESL', 'Fed_Funds',
'SP_500', 'SP_Industrial', 'SP_Dividend_Yield', 'SP_PE_Ratio')
df_drivers = df_drivers[-c(1,2),]
df_drivers$Date <- as.Date(df_drivers$Date, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$Date >= "2010-09-01")
df_drivers$lag_unrate <- lag(df_drivers$Unemp_Rate)
df_drivers$unrate_change <- change_func(df_drivers$Unemp_Rate, df_drivers$lag_unrate)
df_drivers$SP_500_lag <- lag(df_drivers$SP_500)
df_drivers$SP_500_change <- change_func(df_drivers$SP_500, df_drivers$SP_500_lag)
df_drivers$CPIAUCSL_lag <- lag(df_drivers$CPIAUCSL)
df_drivers$CPIAUCSL_change <- change_func(df_drivers$CPIAUCSL, df_drivers$CPIAUCSL_lag)
df_drivers$CPILFESL_lag <- lag(df_drivers$CPILFESL)
df_drivers$CPILFESL_change <- change_func(df_drivers$CPILFESL, df_drivers$CPILFESL_lag)
df_price_quarterly <- df_price_quarterly[-1]
df_drivers <- cbind(df_drivers,df_price_quarterly$quarter)
df$quarter <- paste(mondate::year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(price = mean(Price))
df_price_quarterly$lag <- lag(df_price_quarterly$price)
df_price_quarterly$change <- change_func(df_price_quarterly$price, df_price_quarterly$lag)
df_price_quarterly = df_price_quarterly[-c(52),] #last quarter not finished
df_price_quarterly$lag <- na.fill(df_price_quarterly$lag, 0)
df_price_quarterly$change <- na.fill(df_price_quarterly$change, 0)
df_price_quarterly <- df_price_quarterly[-nrow(df_price_quarterly),]
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
conflict_prefer('select', 'dplyr')
conflict_prefer('filter', 'dplyr')
conflict_prefer('lag', 'dplyr')
conflict_prefer('melt', 'reshape2')
change_func <- function(col1, col2){
change <- ((col1 - col2)/col2)*100
return(change)
}
my_theme = theme(panel.grid = element_line(color = '#e6e6e6'),
panel.background = element_rect(fill = 'white'),
plot.title = element_text(hjust = .5, size = 12, colour = 'black'),
text = element_text(family = 'Georgia'),
axis.text = element_text(size = 10),
axis.title = element_text(size = 18, family = 'Georgia', face = 'bold'),
axis.line = element_line(colour = '#737373', size = 1),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#to resolve the local time issue:
Sys.setlocale("LC_TIME", "C")
#Anil
#df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
##Mert
#df <- read.csv(file= "/Users/mertbasaran/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv")
#df_drivers <- read.csv(file = "/Users/mertbasaran/Documents/GitHub/csbtc/current.csv")
#Elcin
df <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df_drivers <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
#Alkim
#df <- read.csv(file= 'C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv('C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/current.csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(mondate::year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(price = mean(Price))
df_price_quarterly$lag <- lag(df_price_quarterly$price)
df_price_quarterly$change <- change_func(df_price_quarterly$price, df_price_quarterly$lag)
df_price_quarterly = df_price_quarterly[-c(52),] #last quarter not finished
df_price_quarterly$lag <- na.fill(df_price_quarterly$lag, 0)
df_price_quarterly$change <- na.fill(df_price_quarterly$change, 0)
df_price_quarterly <- df_price_quarterly[-nrow(df_price_quarterly),]
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
colnames(df_drivers) <- c('Date', 'Unemp_Rate', 'CPIAUCSL', 'CPILFESL', 'Fed_Funds',
'SP_500', 'SP_Industrial', 'SP_Dividend_Yield', 'SP_PE_Ratio')
df_drivers = df_drivers[-c(1,2),]
df_drivers$Date <- as.Date(df_drivers$Date, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$Date >= "2010-09-01")
df_drivers$lag_unrate <- lag(df_drivers$Unemp_Rate)
df_drivers$unrate_change <- change_func(df_drivers$Unemp_Rate, df_drivers$lag_unrate)
df_drivers$SP_500_lag <- lag(df_drivers$SP_500)
df_drivers$SP_500_change <- change_func(df_drivers$SP_500, df_drivers$SP_500_lag)
df_drivers$CPIAUCSL_lag <- lag(df_drivers$CPIAUCSL)
df_drivers$CPIAUCSL_change <- change_func(df_drivers$CPIAUCSL, df_drivers$CPIAUCSL_lag)
df_drivers$CPILFESL_lag <- lag(df_drivers$CPILFESL)
df_drivers$CPILFESL_change <- change_func(df_drivers$CPILFESL, df_drivers$CPILFESL_lag)
df_price_quarterly <- df_price_quarterly[-1]
df_drivers <- cbind(df_drivers,df_price_quarterly$quarter)
View(df_price_quarterly)
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
library(zoo)
library(VGAM)
library(MASS)
library(car)
library(forecast)
library(conflicted)
library(tidyr)
library(scales)
library(reshape2)
library(psych)
library(vars)
library(lmtest)
conflict_prefer('select', 'dplyr')
conflict_prefer('filter', 'dplyr')
conflict_prefer('lag', 'dplyr')
conflict_prefer('melt', 'reshape2')
change_func <- function(col1, col2){
change <- ((col1 - col2)/col2)*100
return(change)
}
my_theme = theme(panel.grid = element_line(color = '#e6e6e6'),
panel.background = element_rect(fill = 'white'),
plot.title = element_text(hjust = .5, size = 12, colour = 'black'),
text = element_text(family = 'Georgia'),
axis.text = element_text(size = 10),
axis.title = element_text(size = 18, family = 'Georgia', face = 'bold'),
axis.line = element_line(colour = '#737373', size = 1),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#to resolve the local time issue:
Sys.setlocale("LC_TIME", "C")
#Anil
#df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
##Mert
#df <- read.csv(file= "/Users/mertbasaran/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv")
#df_drivers <- read.csv(file = "/Users/mertbasaran/Documents/GitHub/csbtc/current.csv")
#Elcin
df <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df_drivers <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
#Alkim
#df <- read.csv(file= 'C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv('C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/current.csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(mondate::year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(price = mean(Price))
View(df_price_quarterly)
df_price_quarterly$lag <- lag(df_price_quarterly$price)
df_price_quarterly$change <- change_func(df_price_quarterly$price, df_price_quarterly$lag)
df_price_quarterly = df_price_quarterly[-c(52),] #last quarter not finished
View(df_price_quarterly)
View(df_price_quarterly)
df_price_quarterly$lag <- na.fill(df_price_quarterly$lag, 0)
df_price_quarterly$change <- na.fill(df_price_quarterly$change, 0)
df_price_quarterly <- df_price_quarterly[-nrow(df_price_quarterly),]
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
View(df_price_quarterly)
colnames(df_drivers) <- c('Date', 'Unemp_Rate', 'CPIAUCSL', 'CPILFESL', 'Fed_Funds',
'SP_500', 'SP_Industrial', 'SP_Dividend_Yield', 'SP_PE_Ratio')
df_drivers = df_drivers[-c(1,2),]
df_drivers$Date <- as.Date(df_drivers$Date, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$Date >= "2010-09-01")
df_drivers$lag_unrate <- lag(df_drivers$Unemp_Rate)
df_drivers$unrate_change <- change_func(df_drivers$Unemp_Rate, df_drivers$lag_unrate)
df_drivers$SP_500_lag <- lag(df_drivers$SP_500)
df_drivers$SP_500_change <- change_func(df_drivers$SP_500, df_drivers$SP_500_lag)
df_drivers$CPIAUCSL_lag <- lag(df_drivers$CPIAUCSL)
df_drivers$CPIAUCSL_change <- change_func(df_drivers$CPIAUCSL, df_drivers$CPIAUCSL_lag)
df_drivers$CPILFESL_lag <- lag(df_drivers$CPILFESL)
df_drivers$CPILFESL_change <- change_func(df_drivers$CPILFESL, df_drivers$CPILFESL_lag)
df_price_quarterly <- df_price_quarterly[-1]
df_drivers <- cbind(df_drivers,df_price_quarterly$quarter)
View(df_price_quarterly)
View(df_price_quarterly)
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
library(zoo)
library(VGAM)
library(MASS)
library(car)
library(forecast)
library(conflicted)
library(tidyr)
library(scales)
library(reshape2)
library(psych)
library(vars)
library(lmtest)
conflict_prefer('select', 'dplyr')
conflict_prefer('filter', 'dplyr')
conflict_prefer('lag', 'dplyr')
conflict_prefer('melt', 'reshape2')
change_func <- function(col1, col2){
change <- ((col1 - col2)/col2)*100
return(change)
}
my_theme = theme(panel.grid = element_line(color = '#e6e6e6'),
panel.background = element_rect(fill = 'white'),
plot.title = element_text(hjust = .5, size = 12, colour = 'black'),
text = element_text(family = 'Georgia'),
axis.text = element_text(size = 10),
axis.title = element_text(size = 18, family = 'Georgia', face = 'bold'),
axis.line = element_line(colour = '#737373', size = 1),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(face = 'bold'))
#to resolve the local time issue:
Sys.setlocale("LC_TIME", "C")
#Anil
#df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
##Mert
#df <- read.csv(file= "/Users/mertbasaran/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv")
#df_drivers <- read.csv(file = "/Users/mertbasaran/Documents/GitHub/csbtc/current.csv")
#Elcin
df <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df_drivers <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
#Alkim
#df <- read.csv(file= 'C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#df_drivers <- read.csv('C:/Users/alkim/OneDrive/Documents/GitHub/csbtc/current.csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(mondate::year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(price = mean(Price))
df_price_quarterly$lag <- lag(df_price_quarterly$price)
df_price_quarterly$change <- change_func(df_price_quarterly$price, df_price_quarterly$lag)
df_price_quarterly = df_price_quarterly[-c(52),] #last quarter not finished
df_price_quarterly$lag <- na.fill(df_price_quarterly$lag, 0)
df_price_quarterly$change <- na.fill(df_price_quarterly$change, 0)
df_price_quarterly <- df_price_quarterly[-nrow(df_price_quarterly),]
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
colnames(df_drivers) <- c('Date', 'Unemp_Rate', 'CPIAUCSL', 'CPILFESL', 'Fed_Funds',
'SP_500', 'SP_Industrial', 'SP_Dividend_Yield', 'SP_PE_Ratio')
df_drivers = df_drivers[-c(1,2),]
df_drivers$Date <- as.Date(df_drivers$Date, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$Date >= "2010-09-01")
df_drivers$lag_unrate <- lag(df_drivers$Unemp_Rate)
df_drivers$unrate_change <- change_func(df_drivers$Unemp_Rate, df_drivers$lag_unrate)
df_drivers$SP_500_lag <- lag(df_drivers$SP_500)
df_drivers$SP_500_change <- change_func(df_drivers$SP_500, df_drivers$SP_500_lag)
df_drivers$CPIAUCSL_lag <- lag(df_drivers$CPIAUCSL)
df_drivers$CPIAUCSL_change <- change_func(df_drivers$CPIAUCSL, df_drivers$CPIAUCSL_lag)
df_drivers$CPILFESL_lag <- lag(df_drivers$CPILFESL)
df_drivers$CPILFESL_change <- change_func(df_drivers$CPILFESL, df_drivers$CPILFESL_lag)
#df_price_quarterly <- df_price_quarterly[-1]
df_drivers <- cbind(df_drivers,df_price_quarterly$quarter)
combined_df <- cbind(df_price_quarterly,df_drivers[,-c(1,ncol(df_drivers))])
#combined_df$normalized_price <- (combined_df$normalized_price - min(combined_df$normalized_price)) / (max(combined_df$normalized_price) - min(combined_df$normalized_price))
combined_df <- combined_df[-c(1:11),]
View(df_drivers)
View(df_price_quarterly)
View(combined_df)
#Anil
#df_drivers_monthly <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current_monthly.csv')
#Elcin
df_drivers_monthly <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current_monthly.csv')
df_price_monthly <- df %>% group_by(month) %>% summarise(price = mean(Price))
df$month <- paste(mondate::year(df$Date),mondate::month(df$Date))
df_price_monthly <- df %>% group_by(month) %>% summarise(price = mean(Price))
df_price_monthly <- df %>%
group_by(month = format(Date, "%Y-%m")) %>%
summarize(price = mean(Price))
df_price_monthly <- df_price_monthly[-c((nrow(df_price_monthly)-3):nrow(df_price_monthly)),]
df_price_monthly <- df_price_monthly[-c(1:2),]
df_price_monthly$lag <- lag(df_price_monthly$price)
df_price_monthly$change <- change_func(df_price_monthly$price, df_price_monthly$lag)
#df_price_monthly = df_price_monthly[-c(52),] #last quarter not finished
df_price_monthly$lag <- na.fill(df_price_monthly$lag, 0)
df_price_monthly$change <- na.fill(df_price_monthly$change, 0)
df_drivers_monthly <- df_drivers_monthly %>% select(c('sasdate','UNRATE','CPIAUCSL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
colnames(df_drivers_monthly) <- c('Date', 'Unemp_Rate', 'CPIAUCSL', 'Fed_Funds',
'SP_500', 'SP_Industrial', 'SP_Dividend_Yield', 'SP_PE_Ratio')
df_drivers_monthly = df_drivers_monthly[-1,]
df_drivers_monthly$Date <- as.Date(df_drivers_monthly$Date, format = "%m/%d/%Y")
df_drivers_monthly <- df_drivers_monthly %>% filter (df_drivers_monthly$Date >= "2010-09-01")
df_drivers_monthly$lag_unrate <- lag(df_drivers_monthly$Unemp_Rate)
df_drivers_monthly$unrate_change <- change_func(df_drivers_monthly$Unemp_Rate, df_drivers_monthly$lag_unrate)
df_drivers_monthly$SP_500_lag <- lag(df_drivers_monthly$SP_500)
df_drivers_monthly$SP_500_change <- change_func(df_drivers_monthly$SP_500, df_drivers_monthly$SP_500_lag)
df_drivers_monthly$CPIAUCSL_lag <- lag(df_drivers_monthly$CPIAUCSL)
df_drivers_monthly$CPIAUCSL_change <- change_func(df_drivers_monthly$CPIAUCSL, df_drivers_monthly$CPIAUCSL_lag)
#df_drivers_monthly$CPILFESL_lag <- lag(df_drivers_monthly$CPILFESL)
#df_drivers_monthly$CPILFESL_change <- change_func(df_drivers_monthly$CPILFESL, df_drivers_monthly$CPILFESL_lag)
df_drivers_monthly <- df_drivers_monthly[-c((nrow(df_drivers_monthly)-1):nrow(df_drivers_monthly)),]
df_drivers_monthly <- cbind(df_drivers_monthly,df_price_monthly$month)
combined_df_monthly <- cbind(df_price_monthly,df_drivers_monthly[,-c(1,ncol(df_drivers_monthly))])
#combined_df$normalized_price <- (combined_df$normalized_price - min(combined_df$normalized_price)) / (max(combined_df$normalized_price) - min(combined_df$normalized_price))
combined_df_monthly <- combined_df_monthly[-c(1:31),]
View(combined_df_monthly)
install.packages("midasr")
library('midasr')
