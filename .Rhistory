df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
ifelse(df$contains_str == 'K',df$Vol*1000)
df$Vol <- as.numeric(df$Vol)
#Elcin
df <- read.csv(file= 'C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
View(df)
sum(is.na(df$Vol))
ifelse(df$contains_str == 'K',df$Vol*1000)
ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
View(df)
names(df)[names(df) == 'Change..'] <- "Change"
grepl("%", df$Change)
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
View(df)
df$contains_str <- NULL
View(df)
str(df)
as.Date(df$Date, format = "%b %d, %Y")
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
library("readxl")
df <- read_excel('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/SupplementData/xlsx')
df <- read_excel('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/SupplementData.xlsx')
df <- read_excel('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/SupplementData.xlsx')
View(df)
as.Date(df$sasdate, origin = "1899-12-30")
df <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
View(df)
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS'))
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S&P 500', 'S&P: indust', 'S&P div yield',
'S&P PE ratio'))
View(df)
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S&P: indust', 'S&P div yield',
'S&P PE ratio'))
'S.P.PE .
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
f %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P.. indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P.. indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df %>% select(c('UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df = df[-c(1,2),]
View(df)
df <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
df <- df %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df = df[-c(1,2),]
View(df)
str(df)
df$Date <- as.Date(df$sasdate, format = "%m/%d/%Y")
View(df)
df <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
df <- df %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df = df[-c(1,2),]
df$sasdate <- as.Date(df$sasdate, format = "%m/%d/%Y")
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
install.packages("mondate")
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
library(zoo)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df_price_quarterly)
library("readxl")
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
#Elcin
#df <- read.csv('C:/Users/Acer/OneDrive - ADA University/Documents/GitHub/csbtc/current.csv')
df <- df %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df = df[-c(1,2),]
df$sasdate <- as.Date(df$sasdate, format = "%m/%d/%Y")
View(df)
View(df_price_quarterly)
View(df)
View(df)
df %>% filter (sasdate >= "2010-12-01")
View(df)
df_filtered <- df %>% filter (sasdate >= "2010-12-01")
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df_price_quarterly)
View(df_filtered)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#########Data Manipulation########
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df_filtered)
View(df_price_quarterly)
View(df)
library(dplyr)
library(stringr)
library(data.table)
library(ggplot2)
library(mondate)
library(zoo)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df)
View(df)
df$Date <- as.Date(df$Date, format = "%m, %d, %Y")
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%m, %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%m %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%B %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
View(df)
df$Date <- as.Date(df$Date, format = "%B %d, %Y")
View(df)
?as.Date
library(dplyr)
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
View(df)
df$Date <- as.Date(df$Date, format = "%b %d, %z")
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df$Date <- as.Date(df$Date, format = "%b %d %Y")
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
View(df)
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
View(df)
Sys.getlocale("LC_TIME")
lct <- Sys.getlocale("LC_TIME"); Sys.setlocale("LC_TIME", "C")
Sys.getlocale("LC_TIME")
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
View(df)
#to resolve the local time issue:
#Sys.setlocale("LC_TIME", "C")
#Anil
df <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/Bitcoin Historical Data - Investing.com (1).csv')
names(df)[names(df) == 'Vol.'] <- "Vol"
names(df)[names(df) == 'Change..'] <- "Change"
df$Price <- as.numeric(sub(",", "", df$Price, fixed=TRUE))
df$Open <- as.numeric(sub(",", "", df$Open, fixed=TRUE))
df$High <- as.numeric(sub(",", "", df$High, fixed=TRUE))
df$Low <- as.numeric(sub(",", "", df$Low, fixed=TRUE))
df$contains_str <- ifelse(grepl("K", df$Vol), "K",
ifelse(grepl('M', df$Vol),'M',
ifelse(grepl('B', df$Vol),'B',"")))
rep_str = c('K'='','B'='','M'='')
df$Vol <- str_replace_all(df$Vol, rep_str)
df$Vol <- as.numeric(df$Vol)
df$Date <- as.Date(df$Date, format = "%b %d, %Y")
df$Vol <- ifelse(df$contains_str == 'K',df$Vol*1000,
ifelse(df$contains_str == 'M', df$Vol*1000000,
ifelse(df$contains_str == 'B', df$Vol*1000000000,df$Vol)))
df$contains_str <- NULL
df$Change <- as.numeric(sub("%", "", df$Change, fixed=TRUE))/100
df$quarter <- paste(year(df$Date),quarters(df$Date))
df_price_quarterly <- df %>% group_by(quarter) %>% summarise(avg = mean(Price))
plot(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg, type = 'l')
#########Potential Drivers########
#Anil
df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df_drivers = df_drivers[-c(1,2),]
df_drivers$sasdate <- as.Date(df$sasdate, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (sasdate >= "2010-12-01")
View(df_drivers)
df_drivers <- df_drivers %>% filter (sasdate >= "2010-12-01")
View(df_drivers)
df_drivers <- df_drivers %>% filter (sasdate >= "12/1/2010")
View(df_drivers)
df_drivers <- df_drivers %>% filter (df_drivers$sasdate >= "12/1/2010")
View(df)
View(df_drivers)
df_drivers$sasdate <- as.Date(df$sasdate, format = "%m/%D/%Y")
#########Potential Drivers########
#Anil
df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df_drivers = df_drivers[-c(1,2),]
df_drivers$sasdate <- as.Date(df$sasdate, format = "%m/%D/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$sasdate >= "12/1/2010")
View(df_drivers)
df_drivers$sasdate <- as.Date(df$sasdate, format = "%m/%d/%Y")
df$sasdate
View(df_drivers)
df_drivers$sasdate <- as.Date(df_drivers$sasdate, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$sasdate >= "12/1/2010")
View(df_drivers)
df_drivers$sasdate <- as.Date(df_drivers$sasdate, format = "%m/%d/%Y")
class(df$sasdate)
View(df_drivers)
df_drivers <- df_drivers %>% filter (df_drivers$sasdate >= "2010-12-01")
View(df_drivers)
View(df_price_quarterly)
#########Potential Drivers########
#Anil
df_drivers <- read.csv(file= 'C:/Users/asus/Documents/GitHub/csbtc/current.csv')
df_drivers <- df_drivers %>% select(c('sasdate','UNRATE','CPIAUCSL', 'CPILFESL', 'FEDFUNDS',
'S.P.500', 'S.P..indust', 'S.P.div.yield',
'S.P.PE.ratio'))
df_drivers = df_drivers[-c(1,2),]
df_drivers$sasdate <- as.Date(df_drivers$sasdate, format = "%m/%d/%Y")
df_drivers <- df_drivers %>% filter (df_drivers$sasdate >= "2010-06-01")
df_drivers = df_drivers[-c(52),]
df_price_quarterly = df_price_quarterly[-c(52),]
df_drivers <- cbind(df_drivers,df_price_quarterly$quarter)
ggplot(data = df_price_quarterly, aes(x = as.yearqtr(df_price_quarterly$quarter, format = '%Y Q%q'), y = df_price_quarterly$avg))+
geom_line()
combined_df <- cbind(df_price_quarterly,df_drivers)
View(combined_df)
ggplot(combined_df, aes(x=as.yearqtr(combined_df$quarter, format = '%Y Q%q')) +
geom_line(aes(y = combined_df$avg), color = "darkred") +
geom_line(aes(y = combined_df$UNRATE), color="steelblue", linetype="twodash"))
ggplot(combined_df, aes(x=as.yearqtr(combined_df$quarter, format = '%Y Q%q'))) +
geom_line(aes(y = combined_df$avg), color = "darkred") +
geom_line(aes(y = combined_df$UNRATE), color="steelblue", linetype="twodash")
df_price_quarterly[,1]
df_price_quarterly[[,1]]
df_price_quarterly[1]
df_price_quarterly(1)
df_price_quarterly[1,2]
df_price_quarterly[1,1]
df_price_quarterly[2,1]
for (i in length(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,i]-df_price_quarterly[i-1,i-1])/df_price_quarterly[i-1,i-1])*100
}
}
length(df_price_quarterly)
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,i]-df_price_quarterly[i-1,i-1])/df_price_quarterly[i-1,i-1])*100
}
}
nrow(df_price_quarterly
)
i
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
}
}
growth <- array()
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
}
}
View(growth)
View(growth)
((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
i=2
((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
growth <- data.frame(Date=as.Date(character()),
File=character(),
User=character(),
stringsAsFactors=FALSE)
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
}
}
growth <- matrix()
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
}
}
View(growth)
growth <- zeros(50,1)
growth <- integer(50)
for (i in nrow(df_price_quarterly)) {
if (i==1) {
growth[i]=0
}
else {
growth[i]=((df_price_quarterly[i,2]-df_price_quarterly[i-1,2])/df_price_quarterly[i-1,2])*100
}
}
View(growth)
View(growth)
growth <- data.frame(growth)
growth <- t(growth)
View(growth)
View(combined_df)
View(growth)
